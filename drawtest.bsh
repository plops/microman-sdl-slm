import ij.IJ;
import ij.ImagePlus;
import ij.process.ByteProcessor;
import ij.gui.ShapeRoi;
import java.awt.image.BufferedImage;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.Color;
import org.micromanager.utils.ReportingUtils;
import ij.process.ImageProcessor;
import org.micromanager.utils.ImageUtils;
import java.awt.geom.Point2D;
import org.micromanager.utils.ImageUtils;
import org.micromanager.utils.MathFunctions;

String slm;
int slmWidth;
int slmHeight;
int diameter;

public void addSpot(ImageProcessor proc, x, y, dia) {
	proc.fillOval(x-dia/2, y-dia/2, dia, dia);
}
// then use:
//imgp.updateImage();
//imgp.getCanvas().repaint();

		
public void displaySpot(int x, int y) {
	proc = new ByteProcessor(slmWidth, slmHeight);
	proc.setColor(Color.black);
	proc.fill();
	proc.setColor(Color.white);
	addSpot(proc,x,y, diameter);
	img = new ImagePlus("",proc);
	//img.show();
	try {
		mmc.setSLMImage(slm, proc.getPixels());
		mmc.displaySLMImage(slm);
	} catch (Throwable e) {
		print("DMD not connecting properly.");
	}
}

slm = mmc.getSLMDevice();
slmWidth = (int) mmc.getSLMWidth(slm);
slmHeight = (int) mmc.getSLMHeight(slm);
diameter = 40;

displaySpot(100,100);

